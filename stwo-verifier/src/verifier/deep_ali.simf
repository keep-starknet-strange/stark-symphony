// SPDX-FileCopyrightText: 2025 StarkWare Industries Ltd.
//
// SPDX-License-Identifier: MIT

#ifndef VERIFIER_DEEP_ALI_SIMF
#define VERIFIER_DEEP_ALI_SIMF

#include "channel/state.simf"
#include "fields/qm31.simf"
#include "groups/qm31_point.simf"
#include "poly/evaluations.simf"
#include "verifier/proof.simf"

/// Reads the trace/cp polynomial evaluations at OODS, samples OODS point and random coefficient for DEEP quotients.
/// Fails if the computed CP evaluation does not match the sampled CP evaluation.
/// Returns the updated channel state and random coefficient for DEEP quotients.
fn oods(state: ChannelState, log_size: u8, oods_evals: OodsEvals, random_coeff: QM31) -> (ChannelState, QM31) {
    let (oods_trace_evals, oods_cp_eval): OodsEvals = oods_evals;

    // Draw OODS point
    let (state, oods_point): (ChannelState, QM31Point) = channel_draw_qm31_point(state);

    // Read sampled values and CP partitioned evaluation
    let state: ChannelState = channel_mix_oods_evals(state, oods_evals);

    // Evaluate composition polynomial at OODS point
    let cp_eval: QM31 = eval_composition_poly(log_size, oods_point, oods_trace_evals, random_coeff);
    
    // Reconstruct sampled CP evaluation and compare
    let sampled_cp_eval: QM31 = composition_poly_eval_from_partitions(oods_cp_eval);
    assert!(qm31_eq(cp_eval, sampled_cp_eval));

    // Draw random coefficient for DEEP quotients
    channel_draw_qm31(state)
}

fn test_oods() {
    let state: ChannelState = (0x94642214378090859916af45c596713b6d8abaa2c72f3ed8ad41f869ad35491b, 0);
    let log_size: u8 = 2;
    let random_coeff: QM31 = qm31(2012724549, 1128459570, 1584582850, 1454574268);
    let oods_trace_evals: TraceEvalsQM31 = list![
        list![qm31(1, 0, 0, 0)],
        list![qm31(219216441, 1999484797, 865948224, 1842303184)],
        list![qm31(88796111, 196217285, 1337974825, 1079249662)],
        list![qm31(1039952504, 987562643, 1687835115, 1083917527)],
    ];
    let oods_cp_eval: CPEvalQM31 = [
        qm31(102457172, 120697777, 684798907, 704325503),
        qm31(1524382544, 864965792, 1090724300, 832226163),
        qm31(1447800586, 1051306930, 2035698572, 902029335),
        qm31(1674296998, 584689294, 411846336, 680031775),
    ];
    let oods_evals: OodsEvals = (oods_trace_evals, oods_cp_eval);
    let ((digest, _), deep_alpha): (ChannelState, QM31) = oods(state, log_size, oods_evals, random_coeff);
    assert!(jet::eq_256(digest, 0x44dff4effae0be493c21672683c892b3baeaa7d251e5e7153bc0e0b2da8a9d96));
    assert!(qm31_eq(deep_alpha, qm31(671473682, 1782580300, 578753371, 854797671)));
}

#endif
